import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,d as t}from"./app--kPdamV4.js";const p="/assets/image-20240207071522037-_emNqzmB.png",e={},o=t(`<h2 id="_1-creating-a-tuple" tabindex="-1"><a class="header-anchor" href="#_1-creating-a-tuple" aria-hidden="true">#</a> 1. Creating a Tuple</h2><ul><li>Use parentheses to create a tuple.</li><li>Separate elements with commas.</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>tup <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;x&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;y&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>tup<span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>tup<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;x&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;y&#39;</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;tuple&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-comparing-lists-and-tuples" tabindex="-1"><a class="header-anchor" href="#_2-comparing-lists-and-tuples" aria-hidden="true">#</a> 2. Comparing Lists and Tuples</h2><figure><img src="`+p+`" alt="image-20240207071522037" tabindex="0" loading="lazy"><figcaption>image-20240207071522037</figcaption></figure><p>Differences between lists and tuples:</p><ul><li>Lists use square brackets <code>[]</code> to enclose elements, while tuples use round brackets <code>()</code>.</li><li>Elements in lists can be modified, added, or removed (mutable), while elements in tuples cannot be modified (immutable).</li></ul><h2 id="_3-immutability-of-tuples" tabindex="-1"><a class="header-anchor" href="#_3-immutability-of-tuples" aria-hidden="true">#</a> 3. Immutability of Tuples</h2><p>Any attempt to modify a tuple will result in an error:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>tup <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;x&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;y&quot;</span><span class="token punctuation">)</span>
tup<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>

<span class="token comment"># output</span>
Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>
  File <span class="token string">&quot;/Users/gaxa/Coder/Pythonfile/data_type.py&quot;</span><span class="token punctuation">,</span> line <span class="token number">2</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>
    tup<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token operator">~</span><span class="token operator">~</span><span class="token operator">~</span><span class="token operator">^</span><span class="token operator">^</span><span class="token operator">^</span>
TypeError<span class="token punctuation">:</span> <span class="token string">&#39;tuple&#39;</span> <span class="token builtin">object</span> does <span class="token keyword">not</span> support item assignment
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-indexing-and-slicing-tuples" tabindex="-1"><a class="header-anchor" href="#_4-indexing-and-slicing-tuples" aria-hidden="true">#</a> 4. Indexing and Slicing Tuples</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>tup <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;lilei&quot;</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>tup<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment"># output 2</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>tup<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> tup<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># output 2 19</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>tup<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>       <span class="token comment"># output (2, 19)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>tup<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># output (&quot;lilei&quot;, 2)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-tuple-characteristics" tabindex="-1"><a class="header-anchor" href="#_5-tuple-characteristics" aria-hidden="true">#</a> 5. Tuple Characteristics</h2><p>Consider the scenario where a tuple has only one element. What type is it?</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>tup <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>tup<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;int&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To resolve this issue, add a comma:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>tup <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span>  <span class="token comment"># Add a comma to distinguish when a tuple has only one element</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>tup<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;tuple&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-concatenating-tuples" tabindex="-1"><a class="header-anchor" href="#_6-concatenating-tuples" aria-hidden="true">#</a> 6. Concatenating Tuples</h2><p>Simply use the plus sign to concatenate tuples:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>tup1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
tup2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
new_tup <span class="token operator">=</span> tup1 <span class="token operator">+</span> tup2
<span class="token keyword">print</span><span class="token punctuation">(</span>new_tup<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-sorting-tuples" tabindex="-1"><a class="header-anchor" href="#_7-sorting-tuples" aria-hidden="true">#</a> 7. Sorting Tuples</h2><h3 id="_7-1-using-basic-knowledge" tabindex="-1"><a class="header-anchor" href="#_7-1-using-basic-knowledge" aria-hidden="true">#</a> 7.1 Using Basic Knowledge</h3><p>Sort the following tuple:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>tup <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Approach:</p><ul><li>Convert the tuple to a list since tuples are immutable.</li><li>Perform sorting.</li><li>Convert it back to a tuple.</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>tup <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
lst <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>tup<span class="token punctuation">)</span>
lst<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment"># Modify the list directly</span>
tup_new <span class="token operator">=</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>tup_new<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-2-using-sorted" tabindex="-1"><a class="header-anchor" href="#_7-2-using-sorted" aria-hidden="true">#</a> 7.2 Using <code>sorted()</code></h3><p><code>sorted()</code> essentially performs the same steps:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>tup1 <span class="token operator">=</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span><span class="token builtin">sorted</span><span class="token punctuation">(</span>tup<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># sorted(tup) automatically converts it to a list, so it needs to be converted back to a tuple</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>tup1<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-using-zip" tabindex="-1"><a class="header-anchor" href="#_8-using-zip" aria-hidden="true">#</a> 8. Using <code>zip()</code></h2><h3 id="_8-1-introduction" tabindex="-1"><a class="header-anchor" href="#_8-1-introduction" aria-hidden="true">#</a> 8.1 Introduction</h3><p><code>zip()</code> is a built-in function that pairs corresponding elements from multiple iterable objects (such as lists, tuples, or strings) and returns an iterator of tuples. If you have two or more lists and want to create an iterator based on their corresponding elements, <code>zip()</code> is useful.</p><ol><li>For example, with two lists:</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
list2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span>
zipped <span class="token operator">=</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>list1<span class="token punctuation">,</span> list2<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now <code>zipped</code> is an iterator containing tuples where each tuple consists of corresponding elements from both lists. You can convert it to a list to view the contents:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token builtin">list</span><span class="token punctuation">(</span>zipped<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can iterate through this iterator using a loop:</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> num<span class="token punctuation">,</span> letter <span class="token keyword">in</span> zipped<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Number: </span><span class="token interpolation"><span class="token punctuation">{</span>num<span class="token punctuation">}</span></span><span class="token string">, Letter: </span><span class="token interpolation"><span class="token punctuation">{</span>letter<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
Number<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> Letter<span class="token punctuation">:</span> a
Number<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> Letter<span class="token punctuation">:</span> b
Number<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> Letter<span class="token punctuation">:</span> c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>The same applies to tuples:</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>tup1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
tup2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span>
zipped <span class="token operator">=</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>tup1<span class="token punctuation">,</span> tup2<span class="token punctuation">)</span>
<span class="token builtin">list</span><span class="token punctuation">(</span>zipped<span class="token punctuation">)</span>

<span class="token comment"># ---output---</span>
<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,41),c=[o];function u(l,i){return s(),a("div",null,c)}const d=n(e,[["render",u],["__file","06-tuple.html.vue"]]);export{d as default};
