import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,d as e}from"./app--kPdamV4.js";const t="/assets/image-20240124230807747-VOeiKWB2.png",p="/assets/image-20240124235649487-ANiSr24Q.png",o={},l=e(`<h2 id="_1-布尔值" tabindex="-1"><a class="header-anchor" href="#_1-布尔值" aria-hidden="true">#</a> 1. 布尔值</h2><p>意义：表示判断中的是与否。一般用于测试条件中。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token boolean">True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">&gt;</span> <span class="token number">8</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token boolean">True</span>
<span class="token boolean">False</span>
<span class="token boolean">True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+t+`" alt="image-20240124230807747" tabindex="0" loading="lazy"><figcaption>image-20240124230807747</figcaption></figure><ul><li>所有的非空值就是 True</li><li>所有的空序列，空数字为 False</li></ul><h2 id="_2-逻辑运算符" tabindex="-1"><a class="header-anchor" href="#_2-逻辑运算符" aria-hidden="true">#</a> 2. 逻辑运算符</h2><p>逻辑运算符：用于检测两个以上的条件是否满足</p><p>逻辑运算符只存在于布尔当中</p><table><thead><tr><th>逻辑运算符</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td>and 「逻辑“与”」</td><td style="text-align:left;">当运算符两边的两个运算对象都为True时，结果为True</td></tr><tr><td>or 「逻辑“或”」</td><td style="text-align:left;">当运算符两边的两个运算对象其中有一个为True时，结果即为True</td></tr><tr><td>not 「逻辑“非」</td><td style="text-align:left;">用于反转运算对象的状态</td></tr></tbody></table><table><thead><tr><th>exp</th><th>bool</th><th>value</th><th>Return value === print(exp)</th></tr></thead><tbody><tr><td>3 and 5</td><td>True and True</td><td>True</td><td>5 *从3开始往右运行 运行到5也是True 返回5 (需要两个都True)</td></tr><tr><td>3 or 5</td><td>True or True</td><td>True</td><td>3 *or只需要一个True 到3就可以了</td></tr><tr><td>0 or 5</td><td>False or True</td><td>True</td><td>5 *到5才满足条件</td></tr><tr><td>3 and not 5</td><td>True and False</td><td>False</td><td>False</td></tr><tr><td>0 and 5</td><td>False and True</td><td>False</td><td>0 *0和false是一样的</td></tr></tbody></table><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>s1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span>
s2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">}</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token punctuation">{</span><span class="token boolean">False</span><span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span>  <span class="token comment"># set会自动去除后面和前面重复的 - 说明0和false等价</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>In <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">True</span> <span class="token keyword">and</span> <span class="token boolean">False</span> <span class="token keyword">or</span> <span class="token boolean">True</span> 
Out<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">True</span>
<span class="token comment"># 先算and右边的 从右往左</span>

In <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">False</span> <span class="token keyword">or</span> <span class="token boolean">False</span> <span class="token keyword">or</span> <span class="token keyword">not</span> <span class="token boolean">False</span>
Out<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token boolean">True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-表达式应用-—-条件测试" tabindex="-1"><a class="header-anchor" href="#_3-表达式应用-—-条件测试" aria-hidden="true">#</a> 3. 表达式应用 — 条件测试</h2><ul><li>检查当前变量是否与一个特定值相等</li><li>比较数字的大小</li><li>检查特定值是否在某序列里</li></ul><h3 id="_3-1-多条件检查" tabindex="-1"><a class="header-anchor" href="#_3-1-多条件检查" aria-hidden="true">#</a> 3.1 多条件检查</h3><p>使用and检查多个条件</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>age1 <span class="token operator">=</span> <span class="token number">17</span>
age2 <span class="token operator">=</span> <span class="token number">18</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>age1 <span class="token operator">&gt;=</span> <span class="token number">18</span> <span class="token keyword">and</span> age2 <span class="token operator">&gt;=</span><span class="token number">18</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>age1 <span class="token operator">&gt;=</span> <span class="token number">15</span> <span class="token keyword">and</span> age2 <span class="token operator">&gt;=</span><span class="token number">18</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token boolean">False</span>
<span class="token boolean">True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用or检查多个条件</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>age1 <span class="token operator">=</span> <span class="token number">17</span>
age2 <span class="token operator">=</span> <span class="token number">18</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>age1 <span class="token operator">&gt;=</span> <span class="token number">18</span> <span class="token keyword">or</span> age2 <span class="token operator">&gt;=</span><span class="token number">18</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>age1 <span class="token operator">&gt;=</span> <span class="token number">15</span> <span class="token keyword">or</span> age2 <span class="token operator">&gt;=</span><span class="token number">18</span><span class="token punctuation">)</span>

<span class="token comment"># output</span>
<span class="token boolean">True</span>
<span class="token boolean">True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+p+'" alt="image-20240124235649487" tabindex="0" loading="lazy"><figcaption>image-20240124235649487</figcaption></figure>',20),i=[l];function c(r,d){return s(),a("div",null,i)}const b=n(o,[["render",c],["__file","09-bool.html.vue"]]);export{b as default};
